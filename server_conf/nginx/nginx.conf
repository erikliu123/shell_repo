
#user  nobody;
worker_processes  1;

#error_log  logs/error.log;
#error_log  logs/error.log  notice;
#error_log  logs/error.log  info;

#pid        logs/nginx.pid;


events {
    worker_connections  1024;
}


http {
    include       mime.types;
    default_type  application/octet-stream;

    #log_format  main  '$remote_addr - $remote_user [$time_local] "$request" '
    #                  '$status $body_bytes_sent "$http_referer" '
    #                  '"$http_user_agent" "$http_x_forwarded_for"';

    #access_log  logs/access.log  main;

    sendfile        on;
    #tcp_nopush     on;

    #keepalive_timeout  0;
    keepalive_timeout  65;

    #gzip  on;
    server {
        error_log logs/git.error.log;
        access_log logs/git.access.log;
	auth_basic "EverET.org GitWeb Server";
	auth_basic_user_file /usr/local/nginx/conf/liu; #没有此文件或此文件为空都会403Forbidden
        listen       88;
        server_name  gitserver;
        index       index.cgi;
        root /home/git/git/gitweb; #用处不大？ 写/var/www/gitweb/也能显示
        location ~* ^.+\.(css|js|png|jpg|jpeg)$ {
            root  /var/www/gitweb; #用处不大? 主要看gitconf的设置？
            access_log   off;
            expires      24h;
        }
        location ~ \.(cgi|pl).*$ {
                gzip off;
                fastcgi_pass unix:/var/run/fcgiwrap.socket;  
                fastcgi_param  SCRIPT_FILENAME    /var/www/gitweb/gitweb.cgi;
                fastcgi_param  SCRIPT_NAME        gitweb.cgi;
               # fastcgi_param SCRIPT_FILENAME $document_root$fastcgi_script_name;
                include fastcgi_params;
        }
	# location ~ ^/gitweb/.*\.cgi$ {
        #    root /var/www;
            #fastcgi_pass  127.0.0.1:9000;
        #    fastcgi_index index.cgi;
        #    include fastcgi.conf;
       # }
        location ~ ^.*\.git/objects/([0-9a-f]+/[0-9a-f]+|pack/pack-[0-9a-f]+.(pack|idx))$ {
                root /home/git/repositories;
        }
        location ~ ^.*\.git/(HEAD|info/refs|objects/info/.*|git-(upload|receive)-pack)$ {
                root /home/git/repositories;
                fastcgi_param QUERY_STRING $query_string;
                fastcgi_param SCRIPT_FILENAME /usr/libexec/git-core/git-http-backend;
                fastcgi_param GIT_HTTP_EXPORT_ALL true;
                fastcgi_param GIT_PROJECT_ROOT /home/git/repositories;
                fastcgi_param PATH_INFO $uri;
                include fastcgi_params;
                fastcgi_pass unix:/var/run/fcgiwrap.socket;  
        }
        try_files $uri @gitweb;
                location @gitweb {
                fastcgi_pass unix:/var/run/fcgiwrap.socket;  
                fastcgi_param SCRIPT_FILENAME /var/www/gitweb/gitweb.cgi;
                fastcgi_param PATH_INFO $uri;
                #fastcgi_param GITWEB_CONFIG /etc/gitweb.conf; #必须要有？
                include fastcgi_params;
        }
}

   # server {
   #     listen       89;
   #     server_name  gitweb;

        #charset koi8-r;

        #access_log  logs/host.access.log  main;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }

        #error_page  404              /404.html;

        # redirect server error pages to the static page /50x.html
        #
     #   error_page   500 502 503 504  /50x.html;
      #  location = /50x.html {
      #      root   html;
       # }

        # proxy the PHP scripts to Apache listening on 127.0.0.1:80
        #
        #location ~ \.php$ {
        #    proxy_pass   http://127.0.0.1;
        #}

        # pass the PHP scripts to FastCGI server listening on 127.0.0.1:9000
        #
        #location ~ \.php$ {
        #    root           html;
        #    fastcgi_pass   127.0.0.1:9000;
        #    fastcgi_index  index.php;
        #    fastcgi_param  SCRIPT_FILENAME  /scripts$fastcgi_script_name;
        #    include        fastcgi_params;
        #}

        # deny access to .htaccess files, if Apache's document root
        # concurs with nginx's one
        #
        #location ~ /\.ht {
        #    deny  all;
        #}
    #}


    # another virtual host using mix of IP-, name-, and port-based configuration
    #
    #server {
    #    listen       8000;
    #    listen       somename:8080;
    #    server_name  somename  alias  another.alias;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}


    # HTTPS server
    #
    #server {
    #    listen       443 ssl;
    #    server_name  localhost;

    #    ssl_certificate      cert.pem;
    #    ssl_certificate_key  cert.key;

    #    ssl_session_cache    shared:SSL:1m;
    #    ssl_session_timeout  5m;

    #    ssl_ciphers  HIGH:!aNULL:!MD5;
    #    ssl_prefer_server_ciphers  on;

    #    location / {
    #        root   html;
    #        index  index.html index.htm;
    #    }
    #}

}
